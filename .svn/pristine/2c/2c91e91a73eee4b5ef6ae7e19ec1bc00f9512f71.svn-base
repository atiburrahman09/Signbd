using System;
using System.Data;
using Lumex.Project.BLL;
using Lumex.Tech;

namespace Lumex.Project.DAL
{
    public class ReceivePaymentDAL
    {
        public DataTable GetVendorPayments(string vendorId, string recordId, string status, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@VendorId", vendorId.Trim());
                db.AddParameters("@RecordId", recordId.Trim());
                db.AddParameters("@Status", status.Trim());

                DataTable dt = db.ExecuteDataTable("GET_VENDOR_PAYMENTS", true);

                return dt;
            }
            catch (Exception)
            {
                throw;
            }
        }

        public DataTable GetVendorPayableList(string vendorId, string accountOn, string whscId, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@VendorId", vendorId.Trim());
                db.AddParameters("@AccountOn", accountOn.Trim());
                db.AddParameters("@WHSCId", whscId.Trim());
                DataTable dt = db.ExecuteDataTable("GET_VENDOR_PAYABLE_LIST_BY_ID", true);
                return dt;
            }
            catch (Exception)
            {
                throw;
            }
        }

        public DataTable GetCustomerReceivableList(string customerId, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@CustomerId", customerId.Trim());
                db.AddParameters("@SalesCenterId", (string)LumexSessionManager.Get("UserSalesCenterId"));
                DataTable dt = db.ExecuteDataTable("GET_CUSTOMER_RECEIVABLE_LIST_BY_ID", true);
                return dt;
            }
            catch (Exception)
            {
                throw;
            }
        }

        public DataTable SaveVendorPaymentBySC(ReceivePaymentBLL receivePayment, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@PurchaseRecordId", receivePayment.PurchaseRecordId.Trim());
                db.AddParameters("@VendorId", receivePayment.VendorId.Trim());
                db.AddParameters("@SalesCenterId", receivePayment.SalesCenterId.Trim());
                db.AddParameters("@Amount", receivePayment.Amount.Trim());
                db.AddParameters("@CurrentPayable", receivePayment.CurrentPayable.Trim());
                db.AddParameters("@ApprovedBy", LumexSessionManager.Get("ActiveUserId").ToString());
                db.AddParameters("@ApprovedFrom", LumexLibraryManager.GetTerminal());

                DataTable dt = db.ExecuteDataTable("INSERT_VENDOR_PAYMENT_PURCHASE_WISE", true);

                return dt;
            }
            catch (Exception)
            {
                throw;
            }
        }

        public DataTable SaveVendorPayment(ReceivePaymentBLL receivePayment, string accountOn, string whscId, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@AccountId", receivePayment.AccountId.Trim());
           //     db.AddParameters("@WHSCId", whscId.Trim());
                db.AddParameters("@VendorId", receivePayment.VendorId.Trim());
                db.AddParameters("@CashCheque", receivePayment.CashCheque.Trim());
                db.AddParameters("@Amount", receivePayment.Amount.Trim());
                db.AddParameters("@CurrentPayable", receivePayment.CurrentPayable.Trim());
                db.AddParameters("@CreatedBy", LumexSessionManager.Get("ActiveUserId").ToString());
                db.AddParameters("@CreatedFrom", LumexLibraryManager.GetTerminal());
                db.AddParameters("@Bank", receivePayment.Bank.Trim());
                db.AddParameters("@BankBrach", receivePayment.BankBrach.Trim());
                db.AddParameters("@ChequeNo", receivePayment.ChequeNo.Trim());
                db.AddParameters("@ChequeDate",LumexLibraryManager.ParseAppDate(receivePayment.ChequeDate));
                db.AddParameters("@WHSCId", whscId);

                DataTable dt = new DataTable();
                //if (accountOn.Trim() == "WH")
                //{
                //   // dt = db.ExecuteDataTable("INSERT_VENDOR_PAYMENT_FROM_WH", true);
                //    db.AddParameters("@WHSCId", (string)LumexSessionManager.Get("UserWareHouseId"));
                //}
                //else
                //{
                //   // dt = db.ExecuteDataTable("INSERT_VENDOR_PAYMENT_FROM_SC", true);
                //    db.AddParameters("@WHSCId", (string)LumexSessionManager.Get("UserSalesCenterId"));
                //}
                dt = db.ExecuteDataTable("[INSERT_VENDOR_PAYMENT]", true);

                return dt;
            }
            catch (Exception)
            {
                throw;
            }
        }

        public DataTable SaveCustomerPayment(ReceivePaymentBLL receivePayment, string accountOn, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@SalesCenterId",accountOn);
                db.AddParameters("@AccountId", receivePayment.AccountId.Trim());
                db.AddParameters("@CustomerId", receivePayment.CustomerId.Trim());
              //  db.AddParameters("@SalesCenterId", (string)LumexSessionManager.Get("UserSalesCenterId"));
                db.AddParameters("@CashCheque", receivePayment.CashCheque.Trim());
                db.AddParameters("@Amount", receivePayment.Amount.Trim());
                db.AddParameters("@CurrentReceivable", receivePayment.CurrentReceivable.Trim());
                db.AddParameters("@CreatedBy", LumexSessionManager.Get("ActiveUserId").ToString());
                db.AddParameters("@CreatedFrom", LumexLibraryManager.GetTerminal());
                db.AddParameters("@Bank", receivePayment.Bank.Trim());
                db.AddParameters("@BankBrach", receivePayment.BankBrach.Trim());
                db.AddParameters("@ChequeNo", receivePayment.ChequeNo.Trim());
                db.AddParameters("@ChequeDate",LumexLibraryManager.ParseAppDate( receivePayment.ChequeDate));
                //if (accountOn.Trim() == "WH")
                //{
                //    // dt = db.ExecuteDataTable("INSERT_VENDOR_PAYMENT_FROM_WH", true);
                //    db.AddParameters("@SalesCenterId", (string)LumexSessionManager.Get("UserWareHouseId"));
                //}
                //else
                //{
                //    // dt = db.ExecuteDataTable("INSERT_VENDOR_PAYMENT_FROM_SC", true);
                //    db.AddParameters("@SalesCenterId", (string)LumexSessionManager.Get("UserSalesCenterId"));
                //}
                DataTable dt = db.ExecuteDataTable("INSERT_CUSTOMER_PAYMENT", true);

                return dt;
            }
            catch (Exception)
            {
                throw;
            }
        }


        internal DataTable GetCustomerTotalReceivable(string Cid, string SalesCenterId, LumexDBPlayer db)
        {
            try
            {
                db.AddParameters("@CustomerId", Cid.Trim());
                db.AddParameters("@SalesCenterId", SalesCenterId );
                DataTable dt = db.ExecuteDataTable("GET_CUSTOMER_TOTAL_RECEIVABLE_BY_ID", true);
                return dt;
            }
            catch (Exception)
            {

                throw;
            }
        }
    }
}
